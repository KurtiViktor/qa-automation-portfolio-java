/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.1.1/userguide/tutorial_java_projects.html
 */

plugins {
    id 'java'
    id 'io.qameta.allure' version '2.5'
    id 'io.franzbecker.gradle-lombok' version '1.14'
}

sourceCompatibility = 1.8
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories {
    // Use jcenter for resolving your dependencies.
    jcenter()
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

dependencies {
    // log slf4j
    implementation 'org.slf4j:slf4j-api:1.7.+'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.+'

    // log log4j2
    implementation 'org.apache.logging.log4j:log4j-api:2.+'
    implementation 'org.apache.logging.log4j:log4j-core:2.+'

    // config
    implementation 'org.aeonbits.owner:owner:1.+'
    
    // api
    implementation 'com.squareup.retrofit2:retrofit:2.+'
    implementation 'com.squareup.retrofit2:converter-gson:2.+'
    
    // collections
    implementation 'com.google.guava:guava:27.0.1-jre'
    
    // json
    implementation 'com.google.code.gson:gson:2.8.+'
    implementation 'org.glassfish:javax.json:1.1.4'
    
    // db
    implementation 'javax.persistence:javax.persistence-api:2.2'
    
    // db ebean

    // db sqlite
    implementation 'org.xerial:sqlite-jdbc:3.+'
    implementation 'com.zsoltfabok:sqlite-dialect:1.0'
    
    // db hibernate
    implementation 'org.hibernate:hibernate-core:5.4.+'
    implementation 'org.hibernate:hibernate-entitymanager:5.4.+'

    // dependency injection
//    implementation 'com.google.inject:guice:4.2.2'
    
    // junit 5
    implementation 'org.junit.jupiter:junit-jupiter-api:5.+'
    implementation 'org.junit.jupiter:junit-jupiter-engine:5.+'
    implementation 'org.junit.platform:junit-platform-launcher:1.3.+'
    implementation 'org.junit.jupiter:junit-jupiter-params:5.+'

    // junit 5 Extension
    implementation 'ru.lanwen.wiremock:wiremock-junit5:1.3.+'
    implementation 'com.github.dadrus.jpa-unit:jpa-unit5:0.5.0'

    // mock
    implementation 'com.github.tomakehurst:wiremock:2.+'
    
    // selenium
    implementation 'com.codeborne:selenide:5.+'
    
    // allure
    implementation 'io.qameta.allure:allure-selenide:2.+'
    
    // assert
    testImplementation 'org.assertj:assertj-core:3.11.1'
    
    // test video
    testImplementation 'com.automation-remarks:video-recorder-junit5:1.+'
}

test {
    systemProperty 'junit.jupiter.execution.parallel.enabled', false
    useJUnitPlatform {
        includeTags /*'api', 'web', */'db'/*, 'ext'*/
    }
}

allure {
    autoconfigure = true
    version = '2.8.0'
    downloadLink = 'https://github.com/allure-framework/allure2/releases/download/2.8.0/allure-2.8.0.zip'

    useJUnit5 {
        version = '2.8.0'
    }
}

lombok {
    version = '1.18.4'
    sha256 = ""
}

task copyAllureCategories(type: Copy) {
    from "src/test/resources/categories.json"
    into "$buildDir/allure-results"
}

javadoc {
    options.charSet = 'UTF-8'
    options.encoding = 'UTF-8'
    options.docEncoding = 'UTF-8'
}
